MEMORY {
# RAM
  # Zero page
  ZP: start = $0000, size = $0100, type = rw, define = yes;
  RAM: start = $0300, size = $0500, define = yes;

# ROM
  # iNES Header
  HEADER: start = $0000, size = $0010, file = %O, fill = yes;
  PRG: start = $8000, size = $7d00, file = %O, fill = yes, define = yes;
  # 1 Bank of 8K CHR ROM
  CHR: start = $0000, size = $2000, file = %O, fill = yes;
  DMC: start = $fd00, size = $02fa, file = %O, fill = yes, define = yes;
  VECTORS: start = $fffa, size = $0006, file = %O, fill = yes;
}

SEGMENTS {
  HEADER:   load = HEADER,         type = ro;
  STARTUP:  load = PRG,            type = ro,  define = yes;
  LOWCODE:  load = PRG,            type = ro,                optional = yes;
  INIT:     load = PRG,            type = ro,  define = yes, optional = yes;
  CODE:     load = PRG,            type = ro,  define = yes;
  RODATA:   load = PRG,            type = ro,  define = yes;
  DATA:     load = PRG, run = RAM, type = rw,  define = yes;
  VECTORS:  load = VECTORS,        type = ro;
  DMC:      load = DMC,            type = ro;
  CHR:      load = CHR,            type = ro;
  BSS:      load = RAM,            type = bss, define = yes;
  HEAP:     load = RAM,            type = bss, optional = yes;
  ZEROPAGE: load = ZP,             type = zp;
}

#removed CONDES features

SYMBOLS {
  __STACKSIZE__: type = weak, value = $0100;     # 1 page stack
  __STACK_START__: type = weak, value = $0700;

  NES_MAPPER:	  type = weak, value = 0; 			# mapper number, 0 = NROM
  NES_PRG_BANKS:	 type = weak,  value = 2; 			# number of 16K PRG banks, change to 2 for NROM256
  NES_CHR_BANKS:	  type = weak, value = 1; 			# number of 8K CHR banks
  NES_MIRRORING:	  type = weak, value = 1; 			# 0 horizontal, 1 vertical, 8 four screen
}
